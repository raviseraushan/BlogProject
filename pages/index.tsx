import Head from 'next/head'
// import Router, { useRouter } from 'next/router'
// import { BsSearch } from 'react-icons/bs';
import { Blog, Footer, NavBar } from '../components'
import qs from 'qs';
import ReactMarkdown from 'react-markdown'
import { fetchposts } from '../api/api'
import { AxiosResponse } from 'axios'
import { IBlogData, Icollections, IHomeData, IPosts } from '../types'


export default function Home({ Post, Meta ,Page,Search }: IBlogData) {

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar searchbar={true} Search={Search} />
      <Blog Post={Post} Meta={Meta} Page={Page}/>
      <Footer />
    </>
  )
}

export async function getServerSideProps(context:any) {
  const page=context.query.page == null ?1:context.query.page
  const query = qs.stringify({
    populate:"*",
    pagination: {
      page: page,
      pageSize: 4,
    },
  }, {
    encodeValuesOnly: true,
  });
  
  const { data: posts }: AxiosResponse<Icollections<IPosts[]>> = await fetchposts(query);
  const searchquery = qs.stringify({
    populate:"*",
    filters: {
      title: {
        $containsi: context.query.search,
      }
    },
  }, {
    encodeValuesOnly: true,
  });
  const { data: search }: AxiosResponse<Icollections<IPosts[]>> = await fetchposts(searchquery);
  
  return {
    props: {
      Post: posts.data,
      Meta: posts.meta,
      Page: page,
      Search: search.data!=null?search.data:null
    },
  }
}


